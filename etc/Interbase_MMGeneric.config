# General interbase configuration for multi-model generic.
# Same tweaks as the default interbase-all but points to
# multi-model version of the SQL.

# Properties file used to customise jena.rdb to a particular database.
# Properfy files called "Database.config" are intended to apply to all layouts
# and build upon the corresponding DriverLayoutGeneric code.
# Property files called "Database_Layout.config" are specific to a given layout
# and should specify which base java driver is being configured.

# The fully qualified name of the java Driver class, only relevant to layout-specific configs
baseClass = com.hp.hpl.mesa.rdf.jena.rdb.DriverGenericMMGeneric

# The name of the jdbc driver class to be used
jdbcDriver = interbase.interclient.Driver

# The file of SQL defintions to use
sqlFile = etc/interbase_mmgeneric.sql

# The name of the layout implemented, if this is layout specific
layout = MMGeneric

# The name of the database being configured
database = Interbase

# The SQL type used for identifiers. This is typically "INTEGER" for normal layouts
# and either CHAR(16) or CHAR(24) for hash layouts. Normally the value inherited from
# the generic driver is correct.
idType = INTEGER

# The maximum size of string literals that can be indexed.
# Literals longer than this will be stored in a blob with just the head of the literal indexed.
maxLiteral = 180

# Set to "true" if the java driver should allocate IDs explicitly.
# Typically this is only false when insert procedures have been defined.
# allocateID = true

# Set to "true" if the java driver should explicitly check for duplicates
# before performing inserts. Typically this is only false if a full insert
# procedure has been defined.
# checkDuplicates = true

# Set to "true" if the driver should use insertFooProc instead of insertFoo to
# insert objects of type Foo (Namespace, Resource, Statement, Literal).
# The insertFooProc operations are usually procedure calls that might do the
# duplication check and ID allocation in line. See "allocateID" and "checkDuplicates".
# insertByProcedure = false

# Set to "true" if the driver should cache jdbc PreparedStatements for reuse.
# Some drivers (postgresql?) do nothing special with PreparedStatements anyway so
# this has no performance benefit. 
# Some drivers (interclient) do so much that it causes problems with transactions
# it this is enabled.
#  If in doubt, leave as false.
cachePreparedStatements = false


