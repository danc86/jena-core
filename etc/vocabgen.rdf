<?xml version='1.0'?>

<!DOCTYPE rdf:RDF [
    <!ENTITY jena    'http://jena.hpl.hp.com/'>

    <!ENTITY rdf     'http://www.w3.org/1999/02/22-rdf-syntax-ns#'>
    <!ENTITY rdfs    'http://www.w3.org/2000/01/rdf-schema#'>
    <!ENTITY owl     'http://www.w3.org/2002/07/owl#'>
    <!ENTITY xsd     'http://www.w3.org/2001/XMLSchema#'>
    <!ENTITY base    '&jena;2003/04/vocabgen'>
    <!ENTITY vocab   '&base;#'>
]>

<rdf:RDF
  xmlns:rdf   ="&rdf;"
  xmlns:rdfs  ="&rdfs;"
  xmlns:owl   ="&owl;"
  xmlns:vocab ="&vocab;"
  xmlns       ="&vocab;"
  xml:base    ="&base;"
>

<!--
	Example VobabGen configuration for use with jena.VocabGen
    Not all possible options are used in this example, see Javadoc and Howto for full details.
    
	Author: Ian Dickinson, mailto:ian.dickinson@hp.com
	CVS:    $Id$
-->

<vocab:Config>
    <!-- specifies that the  source document uses OWL -->
    <vocab:owl rdf:datatype="&xsd;boolean">true</vocab:owl>
    
    <!-- specifies that we want the generated vocab to use OntClass, OntProperty, etc, not Resource and Property -->
    <vocab:ontology rdf:datatype="&xsd;boolean">true</vocab:ontology>
    
    <!-- specifies that we want names mapped to uppercase (as standard Java constants) -->
    <vocab:uppercase rdf:datatype="&xsd;boolean">true</vocab:uppercase>
    
    <!-- append Vocab to class name, so input beer.owl becomes BeerVocab.java -->
    <vocab:classnamesuffix rdf:datatype="&xsd;string">Vocab</vocab:classnamesuffix>
    
    <!-- the java package that the vocabulary is in -->
    <vocab:package rdf:datatype="&xsd;string">com.example.vocabulary</vocab:package>
    
    <!-- the directory or file to write the results out to -->
    <vocab:output rdf:datatype="&xsd;string">src/com/example/vocabulary</vocab:output>
    
    <!-- the template for the file header -->
<vocab:header rdf:datatype="&xsd;string">/*****************************************************************************
 * Source code information
 * -----------------------
 * Original author    Jane Smart, example.com
 * Author email       jane.smart@example.com
 * Package            @package@
 * Web site           @website@
 * Created            %date%
 * Filename           $RCSfile$
 * Revision           $Revision$
 * Release status     @releaseStatus@ $State$
 *
 * Last modified on   $Date$
 *               by   $Author$
 *
 * @copyright@
 *****************************************************************************/


// Package
///////////////////////////////////////
package %package%;


// Imports
///////////////////////////////////////
%imports%



/**
 * Vocabulary definitions from %sourceURI%
 * @author Auto-generated by VocabGen on %date%
 */</vocab:header>

<!-- the template for the file footer (note @footer@ is an ant-ism, will not be processed by VocabGen) -->
<vocab:footer rdf:datatype="&xsd;string">
/*
@footer@
*/
</vocab:footer>

<-- template for extra declarations at the top of the class file -->
<vocab:declarations rdf:datatype="&xsd;string">
    /** Factory for generating symbols */
    private static KsValueFactory s_vf = new DefaultValueFactory();
</vocab:declarations>

<-- template for introducing the properties in the vocabulary -->
<vocab:propSection rdf:datatype="&xsd;string">
    // Vocabulary properties
    ///////////////////////////
</vocab:propSection>

<-- template for introducing the classes in the vocabulary -->
<vocab:classSection rdf:datatype="&xsd;string">
    // Vocabulary classes
    ///////////////////////////
</vocab:classSection>

<-- template for introducing the individuals in the vocabulary -->
<vocab:individualsSection rdf:datatype="&xsd;string">
    // Vocabulary individuals
    ///////////////////////////
</vocab:individualsSection>

<-- template for doing fancy declarations of individuals -->
<vocab:individualTemplate rdf:datatype="&xsd;string">public static final KsSymbol %valname% = s_vf.newSymbol( "%valuri%" );

    /** Ontology individual corresponding to {@link #%valname%} */
    public static final %valclass% _%valname% = m_model.%valcreator%( %valtype%, "%valuri%" );
</vocab:individualTemplate>

</vocab:Config>

</rdf:RDF>
