# Properties file used to customise jena.rdb to a particular database.
# Properfy files called "Database.config" are intended to apply to all layouts
# and build upon the corresponding DriverLayoutGeneric code.
# Property files called "Database_Layout.config" are specific to a given layout
# and should specify which base java driver is being configured.

# The name of the database being configured
database = Postgresql

# The name of the jdbc driver class to be used
jdbcDriver = org.postgresql.Driver

# The file of SQL defintions to use
# Usually *_all.sql for most layouts and then specific variants for specific layouts.
sqlFile = etc/postgresql_allB.sql

# Set to "true" if the driver should cache jdbc PreparedStatements for reuse.
# Some drivers (postgresql?) do nothing special with PreparedStatements anyway so
# this has no  great performance benefit. Can potentially cause conflicts
# with transactions for some divers but can also have 2-3x performance benefit.
cachePreparedStatements = true

# The maximum size of string literals that can be indexed.
# Literals longer than this will be stored in a blob with just the head of the literal indexed.
maxLiteral = 32000

###################################################################
# Options below here should only be set for specific layout configs.

# The name of the layout implemented
layout = GenericB

# The fully qualified name of the java Driver class to be extended
baseClass = com.hp.hpl.mesa.rdf.jena.rdb.DriverGenericGeneric

###################################################################
# Options below here should only be set for specific layout configs
# and even then usually the values set by the base java class is correct

# The SQL type used for identifiers. This is typically "INTEGER" for normal layouts
# and either CHAR(16) or CHAR(24) for hash layouts. Normally the value inherited from
# the generic driver is correct.
# idType = INTEGER

# Set to "true" if the java driver should allocate IDs explicitly.
# Typically this is only false when insert procedures have been defined.
# allocateID = true

# Set to "true" if the java driver should explicitly check for duplicates
# before performing inserts. Typically this is only false if a full insert
# procedure has been defined.
# checkDuplicates = true

# Set to "true" if the driver should use insertFooProc instead of insertFoo to
# insert objects of type Foo (Namespace, Resource, Statement, Literal).
# The insertFooProc operations are usually procedure calls that might do the
# duplication check and ID allocation in line. See "allocateID" and "checkDuplicates".
# insertByProcedure = false

