Release Notes
=============

Post Jena 2.1 change list

  RDF API
      o Fixed bug in typed literals support which caused isValidLiteral tests
        to fail on user defined types derived indirectly from simple types.
      o Fixed bugs in conversion of Calendar to XSDDateTime
      o Fixed XSDDouble isValidValue test to check for Double
      o Fixed XSDbase64Binary, XSDhexBinary returning strings instead of byte[]

  Database
      o Fixed user-reported problem where removeNsPrefix() wasn't persistent

  Model & Graph removeAll(), remove(S, P, O)
      o added new API operation Model::removeAll() which removes "all" statements
        from a model [currently there are issues about inference models]
      o added removeAll() to Graph BulkUpdateHandler
      o added Model::remove(S, P, O) which removes all statements matching
        (S, P, O) with nulls as wildcards
      o added BulkUpdateHandler.remove(S,P,O) removing triples matching
        (S, P, O), Node.ANY as wildcard
      o BulkUpdateHandler generates events for these
      
      o ModelFactory has gained createUnion(Model, Model) which creates a
        dynamic union of the two argument models.

  GraphMem, SmallGraphMem
      o GraphMem has had the redundant Set(Triple) excised, and changes made
        to NodeToTriplesMap to push the triple-matching inwards and simplify
        GraphMem's find code. It will use a little less memory and should be
        a tad faster.
      o a new memory-based Graph, SmallGraphMem, has been introduced. This
        *only* holds a Set(Triple); no indexing is done. Hence it is
        unsuitable for graphs with more than "a few" statements, unless
        memory footprint is (much) more important than search speed. It
        is primarily an extreme to compare other Graphs against.

  Graph Query handling
      o Query now rewrites (some) RDQL pattern matches which are equivalent
        to startsWith, endsWith, or contains to use new Expression nodes
        with labels J_startsWith, J_endsWith, J_contains, to allow back
        ends to optimise those.

  RDQL
      o Added langeq operator
      o Remove ResultBinding.getValue() (which was an internal use
        operation) as part of move to more directly using the graph level
        queryhandling.

  Event handling
      o added new graph.GraphEvents as holder of event constants with one
        such, .removeAll, issued by BulkUpdateHandler for removeAll(), and
        a static method for creating removed-by-pattern triple values.
      o the standard Jena readers generate startRead and finishRead events
      o all the Graph events now come with their source Graph attached as an
        argument to the event method.

  Reasoners
      o Fixed ommission in handling of someValuesFrom applied to an rdfs:Datatype.
      o Fixed bug in hide() table not being carried across from prebuilt
        reasoner caches, which resulted in the prototypical instance of
        owl:Thing being visible in listIndividuals.
      o Fixed bug in TransitiveReasoner reported by wangxiao
      o Changed delete for RETE reasoner to be non-incremental to work around
        bug without demanding full reference counting
      o Added experimental OWLMini and OWLMicro reasoners

  PrefixMappings
      o Standard no longer contains vcard, jms, or rss.
      o Extended introduced = Standard + vcard, jms, rss.
      o usePrefix deprecated - use shortForm instead.
      o qnameFor added; result is legal qname or null.

  Exceptions
      o added WrappedException extends JenaException for wrapped exceptions
      o added WrappedIOException extends WrappedException

  Node
      o Node cache hash table replaced by specialised implementation
      o new Node methods getNameSpace, getLocalName, hasURI(String)
      o minor adjustments to Node.create(String) to allow for specifying
        language or type for literals, use of default prefix, and
        elimination of the nn-NN hack for numeric literals. 

  Triple
      o Triple.create now uses a cache

  Resource
      o new method hasURI(String)

   Ontology API
      o Added a new method getOWLLanguageLevel() to OntModel, which returns the
        OWL sublanguage - lite, DL or full - and error messages
      o Fixed ont language profiles to allow .as() on e.g. owl:SymmetricProperty as
        OntProperty.class.  Previously this relied on the reasoner; the change was
        needed to support the DIG interface.

Jena 2.1 - Main changes from Jena 2.0
  Installation
      The names of some jars have changed be sure to update your classpath.
	  The name of the xerces jars are now: xercesImpl.jar and xml-apis.jar
	  We also require Jakarta commons logging: commons-logging.jar
	  See readme.html for the full list of jars.

  OWL Syntax Checker
      Major update from alpha version (Jena 2.0), to production
      version (Jena 2.1).
      API created.
      Many fold performance improvement (orders of
      magnitude)
      Now conformant with OWL Recommendation.
      Streaming mode added, suitable for lower memory
      environments or large input.
      Command-Line jena.owlsyntax program added.
      Still to do: better error messages.

  RDF/XML-ABBREV output
      Changes default configuration to not use property
      attributes, which seem unpopular.

  ARP
      Extended API to show bnode scope and XML Namespaces.
      Discovered memory leak which has been present since
      the beginning. This is not fixed. Users of ARP and
      Jena in memory limited, or long-running applications,
      or reading lots of varied RDF/XML, should read the
      updated Javadoc for the package
      com.hp.hpl.jena.rdf.arp.

  Reasoner
      Small bug fixes (see below).

  Xerces
      Now requires Xerces 2.6.0 or better. The included jars are Xerces 2.6.1.

  Ontology API
      General bug fixes and improvements based on jena-dev feedback.

      The default document manager policy (etc/ont-policy.rdf) no longer
      re-directs imports of owl.owl and daml+oil.daml to a cached copy in
      the 'vocabulary' directory. This is becuase the vocabulary directory
      is not included in jena.jar, and this default re-direction was causing
      problems in some applet or web service environments. The Jena 2.0
      behaviour can be restored by replacing ont-policy.rdf with ont-policy-test.rdf.

      Instance detection has been improved, with the side-effect that DAML
      ontologies using the DAML micro rule reasoner may now report that
      instances have rdf:type daml:Thing in addition to other types.
      	
Jena 2.1 changes from Jena 2.1-dev-3
  Minor bug fixes in OWL Syntax Checker.
  Streaming mode in OWL Syntax Checker.
  Documented ARP memory leak.

Jena 2.1-dev-3
  Implements W3C RDF and OWL Proposed Recommendations
  OWL Syntax Checker - much faster, new API (error msgs still being worked on)
  RDF/XML-ABBREV output various bug fixes
  RDF/XML-ABBREV msg added requesting bug reports on rdf:parseType="Collection"
  ARP new extended handler for scope of blank nodes and namespace handler
  ARP improved syntax error messages
  OWL Syntax checker prolog source included in download (see tools dir)

Jena 2.1-dev-2:
  Developers' release to include recent bug fixes (notably
  handling of typed literals in validation rules).
  Do not use this version unless you need one or more bug
  fixes not in Jena 2.0.

Jena 2.1-dev-1:
  This is a developers' release, particularly
  intended for users of the OWL Syntax Checker.
  Most users should continue to use Jena 2.0.
  For changes, see directly below.
  Documentation may not be up to date.
  Do not use this version unless:
  - you need a conformant OWL Syntax Checker
  - you need one or more of the bug fixes not in
    Jena 2.0


RDF API:
o Bug fixes:
  - fixed issue with typed literals sometimes treating lexically different,
    sameValueAs resources as equal.

  - fixed bug in Model::remove(StmtIterator) at the expense of manifesting
    the iterator into a List

  - fixed bug in .remove on StmtIterators returned from listStatements()
    on a memory model

o ModelFactory improvements:
  - ModelSpecs can now be identified by URI as well as Model values
  - ModelRDBMaker.createModel will now return a ModelRDB rather than plain Model

Reasoner subsystem:

o Fixed delete bug in FORWARD_RETE configurations, remove of statements
  should now remove the consequents of that statement.
o Added a check for constructing one OWL reasoner instance layered on top
  of another because this can have a large performance impact to no benefit.
o Added a "hide" primitive which marks nodes as hidden. When querying an
  inference model no triples containing hidden subject or object nodes will
  be included in the result iterator.
  Used this to hide class-prototype instances
o Extended the comparision builtins (equal, le etc) to support comparison of
  XSDDataTime instances. Many thanks to Bradley Schatz (Bradley@greystate.com)
  for supply the patches for this.
o Extended OWL rules to include more explicit representation of XSD knowledge.
o Various bug fixes in OWL rules (maxCardinality bug, hasValue in intersection
  lists fixed, bug in someValuesFrom fixed, misssing property subclass axioms).
o Fixed bug in RETE engine which could loop when deleting non-deletable triples.
o Fixed bug in LP engine which could lead to loss of variable bindings
  (manifested as "Internal error in LP reasoner: variable in triple result")
o Extended is/notDTtype to check for ill-formed typed literals.

OWL Syntax Checker
o Now conforms with OWL Proposed Rec of December 2003
  - Performance much improved. There is
    about a one second delay on start-up.
  - Error messages still somewhat cryptic
    (Should be better in next release)

RDF/XML-ABBREV output
o Failed to fix bug concerning rdf:parseType="Collection"
   - added new message trying to generate sufficient user feedback
     on jena-dev to track down bug.
o Fixed other bugs on bug list

RDQL
o Improved handling of character sets in qnames

N3
o Improved handling of character sets in qnames



Graph query SPI [NB NOT visible at the model level]

o replaced use of Graph for constraints by new Expression interface as
  part of ongoing query improvement.
